/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.Employee;

import Module.DBO.ConnectionSetup;
import Module.DAO.DoctorAppointmentDAO;
import Module.DAO.HealthProfessionalsDAO;
import Module.DBO.RegisteredEmployee;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author amanda
 */
public class TelaDesmarcarConsulta_Employee extends javax.swing.JPanel {

    private DoctorAppointmentDAO docAppDAO;

    /**
     * Creates new form TelaDesmarcarConsulta_Employee
     */
    public TelaDesmarcarConsulta_Employee() {
        initComponents();
        this.docAppDAO = new DoctorAppointmentDAO(ConnectionSetup.connection);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblPaciente1 = new javax.swing.JLabel();
        cboMedico = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstConsultas = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        btnDesmarcar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                formComponentAdded(evt);
            }
        });
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblPaciente1.setText("Médico:");
        add(lblPaciente1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 70, 72, 20));

        cboMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboMedicoActionPerformed(evt);
            }
        });
        add(cboMedico, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 70, 336, -1));

        jScrollPane1.setViewportView(lstConsultas);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 140, 390, -1));

        jLabel1.setText("Selecione um horário e clique em desmarcar para apagar a consulta:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 110, -1, -1));

        btnDesmarcar.setText("Desmarcar");
        btnDesmarcar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDesmarcarActionPerformed(evt);
            }
        });
        add(btnDesmarcar, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 280, -1, -1));

        jButton1.setText("Cancelar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 280, -1, -1));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText(":: Desmarcar consulta ::");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 30, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void loadConsultas(int doctorId) {
        try {
            List<String> appointments = this.docAppDAO.selectSpecificDoctorAppointments(doctorId);
            if (!appointments.isEmpty()) {
                this.lstConsultas.setListData(appointments.toArray());
            } else {
                this.lstConsultas.removeAll();
                JOptionPane.showMessageDialog(null, "Médico não tem consultas agendadas.");
            }

        } catch (SQLException ex) {
            Logger.getLogger(TelaDesmarcarConsulta_Employee.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void btnDesmarcarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDesmarcarActionPerformed
        // TODO add your handling code here:
        if (lstConsultas.getSelectedValue() == null) {
            JOptionPane.showMessageDialog(null, "Selecione um médico e uma consulta para desmarcar.");
        } else {
            try {
                String[] selected = lstConsultas.getSelectedValue().toString().split(", ");
                if (this.docAppDAO.unscheduleAppointment(Integer.parseInt(selected[0]))) {
                    JOptionPane.showMessageDialog(null, "Consulta desmarcada com sucesso!");
                    this.lstConsultas.removeAll();
                    loadConsultas(((RegisteredEmployee) cboMedico.getSelectedItem()).getId());
                } else {
                    JOptionPane.showMessageDialog(null, "Houve um problema ao desmarcar a consulta, por favor tente novamente.");
                }
            } catch (SQLException ex) {
                Logger.getLogger(TelaDesmarcarConsulta_Employee.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnDesmarcarActionPerformed

    private void cboMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboMedicoActionPerformed
        // TODO add your handling code here:
        int doctorId = ((RegisteredEmployee) cboMedico.getSelectedItem()).getId();
        if (cboMedico.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Selecione um médico para ver disponibilidades!");
        } else {
            loadConsultas(doctorId);
        }
    }//GEN-LAST:event_cboMedicoActionPerformed

    private void formComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_formComponentAdded
        // TODO add your handling code here:
        try {
            List<RegisteredEmployee> doctors = new HealthProfessionalsDAO(ConnectionSetup.connection).listAllHealthProfessionals();
            for (RegisteredEmployee doctor : doctors) {
                cboMedico.addItem(doctor);
            }
        } catch (Exception ex) {
            Logger.getLogger(TelaDesmarcarConsulta_Employee.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formComponentAdded

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDesmarcar;
    private javax.swing.JComboBox cboMedico;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblPaciente1;
    private javax.swing.JList lstConsultas;
    // End of variables declaration//GEN-END:variables
}
